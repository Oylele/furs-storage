"use strict";let discordMessages={api:async function(a,b,c="",d=""){const e=discord.api.channelMessages(b,c);let f,g,h;return f={method:"GET",localCache:!0,headers:new Headers({Authorization:"Bot "+atob(d)})},g=await fetch(e,f),h=await g.json(),h},out:async function(a,b,c="",d="",e="feed"){let f,g,h,j,l,n,o,p,q,r,s,t,u,v,w,x,y;x=new showdown.Converter,f=await this.api(a,b,c,d),y="";let z=0;for(const i=f.length;z<i;z++){g=f[z].id,h=f[z].author,j=h.avatar?"https://cdn.discordapp.com/avatars/"+h.id+"/"+h.avatar+".png":"https://cdn-storage.github.io/images/logos/furry.01.001.512.svg.bg.png",t=f[z].attachments,p=x.makeHtml(f[z].content),l=f[z].timestamp,n=f[z].edited_timestamp?f[z].edited_timestamp:l,q=f[z].mentions,o=new Date(f[z].timestamp).toISOString().split("T")[0];let c=0;for(const a=q.length;c<a;c++)r=new RegExp("\\<\\@\\!(\\d+)?"+q[c].id+"\\>","gi"),s="<mark class=\"mention\">"+he.escape(q[c].username)+"</mark>",p=p.replace(r,s);w="";let d=0;for(const a=t.length;d<a;d++)u=t[d].filename,v=t[d].url,w+=null===t[d].width?"<a href=\""+v+"\" rel=\"nofollow\" target=\"_blank\">"+u+"</a>":"<a href=\""+v+"\" data-fancybox=\"gallery\"><img src=\""+v+"\" alt=\""+u+"\" /></a>";p=discord.parser.emoji(p);"feed"===e?y+=`
<div class="grid-cell">
	<article class="card" itemscope itemtype="http://schema.org/Article">
		<div class="card-content">
			<div class="media" itemprop="author" itemscope itemtype="http://schema.org/Person">
				<div class="media-left">
					<figure class="image is-64x64"><img class="is-rounded" src="${j}" alt="" itemprop="image" /></figure>
				</div>
				<div class="media-content">
					<h4 class="title is-4" itemprop="name">${he.escape(h.username)}</h4>
					<p class="subtitle is-7">
						<a class="has-text-grey-light" href="https://discordapp.com/channels/${a}/${b}/${g}" rel="nofollow" target="_blank">
							<time datetime="${l}">${o}</time>
						</a>
					</p>
				</div>
			</div>
			<div class="content" itemprop="headline">${p}</div>
			<div class="attachments" itemprop="image">${w}</div>
		</div>
		<meta itemprop="datePublished" content="${l}" />
		<meta itemprop="dateModified" content="${n}" />
	</article>
</div>
`:console.log("View is not correct!")}return y},html:async function(a,b,c,d,e,f){let g;return g=$(f).append((await this.out(a,b,c,d,e))),g},run:function(a,b,c,d,e,f){this.html(a,b,c,d,e,f)}};