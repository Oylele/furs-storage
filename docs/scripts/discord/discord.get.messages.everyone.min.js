"use strict";let discordEveryoneMessages={api:async function(a,b,c="",d=""){const e=discord.api.channelMessages(b,c);let f,g,h;return f={method:"GET",localCache:!0,headers:new Headers({Authorization:"Bot "+atob(d)})},g=await fetch(e,f),h=await g.json(),h},out:async function(a,b,c="",d="",e="feed"){let f,g,h,j,l,n,o,p,q,r,s,t,u,v,w,x,y,z;y=new showdown.Converter,f=await this.api(a,b,c,d),z="";let A=0;for(const i=f.length;A<i;A++){if(g=f[A].id,h=f[A].author,j=h.avatar?"https://cdn.discordapp.com/avatars/"+h.id+"/"+h.avatar+".png":"https://cdn-storage.github.io/images/logos/furry.01.001.512.svg.bg.png",u=f[A].attachments,p=y.makeHtml(f[A].content),l=f[A].timestamp,n=f[A].edited_timestamp?f[A].edited_timestamp:l,q=f[A].mentions,t=f[A].mention_everyone,o=new Date(f[A].timestamp).toISOString().split("T")[0],!t)continue;let c=0;for(const a=q.length;c<a;c++)r=new RegExp("\\<\\@\\!(\\d+)?"+q[c].id+"\\>","gi"),s="<mark class=\"mention\">"+he.escape(q[c].username)+"</mark>",p=p.replace(r,s);x="";let d=0;for(const a=u.length;d<a;d++)v=u[d].filename,w=u[d].url,x+=null===u[d].width?"<a href=\""+w+"\" rel=\"nofollow\" target=\"_blank\">"+v+"</a>":"<a href=\""+w+"\" data-fancybox=\"gallery\"><img src=\""+w+"\" alt=\""+v+"\" /></a>";p=discord.parser.url(p),p=discord.parser.emoji(p),"feed"===e?z+=`
<div class="grid-cell">
	<article class="card" itemscope itemtype="http://schema.org/Article">
		<div class="card-content">
			<div class="media" itemprop="author" itemscope itemtype="http://schema.org/Person">
				<div class="media-left">
					<figure class="image is-64x64"><img class="is-rounded" src="${j}" alt="" itemprop="image" /></figure>
				</div>
				<div class="media-content">
					<h4 class="title is-4" itemprop="name">${he.escape(h.username)}</h4>
					<p class="subtitle is-7">
						<a class="has-text-grey-light" href="https://discordapp.com/channels/${a}/${b}/${g}" rel="nofollow" target="_blank">
							<time datetime="${l}">${o}</time>
						</a>
					</p>
				</div>
			</div>
			<div class="content" itemprop="headline">${p}</div>
			<div class="attachments" itemprop="image">${x}</div>
		</div>
		<meta itemprop="datePublished" content="${l}" />
		<meta itemprop="dateModified" content="${n}" />
	</article>
</div>
`:console.log("View is not correct!")}return z},html:async function(a,b,c,d,e,f){let g;return g=$(f).append((await this.out(a,b,c,d,e))),g},run:function(a,b,c,d,e,f){this.html(a,b,c,d,e,f)}};