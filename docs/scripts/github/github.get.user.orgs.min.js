"use strict";let githubUserOrgs={api:async function(a,b){const c=github.api.user(a,"/orgs");let d,e,f;return d={method:"GET",localCache:!0,headers:new Headers({Authorization:"Bot "+atob(b)})},e=await fetch(c,d),f=await e.json(),f},getUserOrgs:async function(a,b){let c=await this.api(a,b),d=[],e=0;for(const f=c.length;e<f;e++)d.push(c[e].login);return d},getOrgRepos:async function(a,b){let c,d,e,f,g=await this.getUserOrgs(a,b);f=[];let h=0;for(const i=g.length;h<i;h++){const a=github.api.org(g[h]);c={method:"GET",localCache:!0,headers:new Headers({Authorization:"Bot "+atob(b)})},d=await fetch(a,c),e=await d.json(),f.push(e)}return f},out:async function(a,b){let c,d,e,f,g,h,k,l,m,n,o,p,q,r,s=await this.getOrgRepos(a,b);r="";let t=0;for(const i=s.length;t<i;t++)c=s[t].login,d=s[t].avatar_url?s[t].avatar_url:"",e=s[t].description?s[t].description:"",f=s[t].name?s[t].name:s[t].login,g=s[t].blog?s[t].blog:s[t].html_url,h=s[t].location?s[t].location:"",k=s[t].email?s[t].email:"",l=s[t].public_repos,m=s[t].html_url,n=s[t].created_at,o=new Date(n).toISOString().split("T")[0],p=s[t].updated_at,q=new Date(p).toISOString().split("T")[0],r+=`
<div class="grid-cell">
	<article class="card" data-org-login="${c}">
		<div class="card-content">
			<div class="media">
				<div class="media-left">
					<figure class="image is-64x64"><img title="" src="${d}" alt="" data-org-info="avatar" /></figure>
				</div>
				<div class="media-content">
					<h4 class="title is-4" data-org-info="name">${f}</h4>
					<p class="subtitle is-6"><a href="${m}" data-org-info="url">@${c}</a></p>
				</div>
			</div>
			<div class="content">
				<p data-org-info="description">${e}</p>
			</div>
		</div>
		<footer class="card-footer">
			<div class="card-footer-item">
				<div class="tags has-addons">
					<span class="tag"><span class="icon"><i class="fas fa-folder"></i></span></span>
					<span class="tag" data-org-count="repos">${l}</span>
				</div>
			</div>
			<div class="card-footer-item">
				<div class="tags has-addons">
					<span class="tag"><span class="icon"><i class="fas fa-plus-square"></i></span></span>
					<span class="tag"><time datetime="${n}" data-org-time="created">${o}</time></span>
				</div>
			</div>
			<div class="card-footer-item">
				<div class="tags has-addons">
					<span class="tag"><span class="icon"><i class="fas fa-sync-alt"></i></span></span>
					<span class="tag"><time datetime="${p}" data-org-time="updated">${q}</time></span>
				</div>
			</div>
		</footer>
		<footer class="card-footer">
			<div class="card-footer-item">
				<div class="tags has-addons">
					<span class="tag"><span class="icon"><i class="fas fa-map-marker-alt"></i></span></span>
					<span class="tag" data-org-info="location">${h}</span>
				</div>
			</div>
			<div class="card-footer-item">
				<div class="tags has-addons">
					<span class="tag"><span class="icon"><i class="fas fa-envelope"></i></span></span>
					<span class="tag"><a href="mailto:${k}" data-org-info="email"><span class="icon"><i class="fas fa-envelope-open"></i></span></a></span>
				</div>
			</div>
			<div class="card-footer-item">
				<div class="tags has-addons">
					<span class="tag"><span class="icon"><i class="fas fa-link"></i></span></span>
					<span class="tag"><a href="${g}" data-org-info="blog"><span class="icon"><i class="fas fa-home"></i></span></a></span>
				</div>
			</div>
		</footer>
	</article>
</div>
`;return r},html:async function(a,b,c){let d;return d=$(a).append((await this.out(b,c))),d},run:function(a,b,c){this.html(a,b,c)}};